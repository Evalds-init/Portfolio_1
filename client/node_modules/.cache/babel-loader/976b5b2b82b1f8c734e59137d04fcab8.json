{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\context\\\\basket\\\\basketState.js\";\nimport { GET_BASKET, DELETE_BASKET_ITEM, CREATE_CHECKOUT_SESSION, BASKET_ERROR, ADD_TO_BASKET, EDIT_QUANTITY } from '../types';\nimport React, { useReducer } from 'react';\nimport BasketContext from './basketContext';\nimport basketReducer from './basketReducer';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst BasketState = props => {\n  const initialState = {\n    basket: null,\n    sessionId: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(basketReducer, initialState); //Get basket items\n\n  const getBasketItems = async () => {\n    try {\n      const res = await axios.get(`/api/v1/basket/getitems`);\n      dispatch({\n        type: GET_BASKET,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Edit user basket item quantity\n\n\n  const editBasketItemQuantity = async (id, quantity) => {\n    let data = {\n      product: id,\n      quantity: quantity\n    };\n    console.log(data);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await axios.put('/api/v1/basket/updatequantity', data, config);\n      dispatch({\n        type: EDIT_QUANTITY,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Delete item from basket\n\n\n  const deleteBasketItem = async id => {\n    try {\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\n      dispatch({\n        type: DELETE_BASKET_ITEM,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Create stripe checkout session\n\n\n  const createCheckoutSession = async products => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/basket/create-checkout-session', products, config);\n      dispatch({\n        type: CREATE_CHECKOUT_SESSION,\n        payload: res.data.id\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Add item to users' basket\n\n\n  const addToBasket = async (product, quantity) => {\n    let item = {\n      product: product._id,\n      quantity\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await axios.put(`/api/v1/basket/${product._id}/addtobasket`, item, config);\n      dispatch({\n        type: ADD_TO_BASKET,\n        payload: item\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BasketContext.Provider, {\n    value: {\n      basket: state.basket,\n      sessionId: state.sessionId,\n      getBasketItems,\n      deleteBasketItem,\n      editBasketItemQuantity,\n      addToBasket,\n      createCheckoutSession\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BasketState;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/basket/basketState.js"],"names":["GET_BASKET","DELETE_BASKET_ITEM","CREATE_CHECKOUT_SESSION","BASKET_ERROR","ADD_TO_BASKET","EDIT_QUANTITY","React","useReducer","BasketContext","basketReducer","axios","defaults","withCredentials","BasketState","props","initialState","basket","sessionId","error","state","dispatch","getBasketItems","res","get","type","payload","data","response","editBasketItemQuantity","id","quantity","product","console","log","config","headers","put","deleteBasketItem","delete","createCheckoutSession","products","post","addToBasket","item","_id","children"],"mappings":"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","sourcesContent":["import {\r\n  GET_BASKET,\r\n  DELETE_BASKET_ITEM,\r\n  CREATE_CHECKOUT_SESSION,\r\n  BASKET_ERROR,\r\n  ADD_TO_BASKET,\r\n  EDIT_QUANTITY,\r\n} from '../types';\r\nimport React, { useReducer } from 'react';\r\nimport BasketContext from './basketContext';\r\nimport basketReducer from './basketReducer';\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst BasketState = (props) => {\r\n  const initialState = {\r\n    basket: null,\r\n    sessionId: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(basketReducer, initialState);\r\n\r\n  //Get basket items\r\n  const getBasketItems = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/v1/basket/getitems`);\r\n\r\n      dispatch({ type: GET_BASKET, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Edit user basket item quantity\r\n  const editBasketItemQuantity = async (id, quantity) => {\r\n    let data = {\r\n      product: id,\r\n      quantity: quantity,\r\n    };\r\n    console.log(data);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      await axios.put('/api/v1/basket/updatequantity', data, config);\r\n\r\n      dispatch({ type: EDIT_QUANTITY, payload: data });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n\r\n  //Delete item from basket\r\n  const deleteBasketItem = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\r\n      dispatch({ type: DELETE_BASKET_ITEM, payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Create stripe checkout session\r\n  const createCheckoutSession = async (products) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        '/api/v1/basket/create-checkout-session',\r\n        products,\r\n        config\r\n      );\r\n      dispatch({ type: CREATE_CHECKOUT_SESSION, payload: res.data.id });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Add item to users' basket\r\n  const addToBasket = async (product, quantity) => {\r\n    let item = {\r\n      product: product._id,\r\n      quantity,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/v1/basket/${product._id}/addtobasket`,\r\n        item,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_TO_BASKET, payload: item });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  return (\r\n    <BasketContext.Provider\r\n      value={{\r\n        basket: state.basket,\r\n        sessionId: state.sessionId,\r\n        getBasketItems,\r\n        deleteBasketItem,\r\n        editBasketItemQuantity,\r\n        addToBasket,\r\n        createCheckoutSession,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BasketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BasketState;\r\n"]},"metadata":{},"sourceType":"module"}