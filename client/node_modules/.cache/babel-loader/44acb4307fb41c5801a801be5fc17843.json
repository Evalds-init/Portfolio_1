{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\context\\\\basket\\\\basketState.js\";\nimport { GET_BASKET, DELETE_BASKET_ITEM, CREATE_CHECKOUT_SESSION, BASKET_ERROR, ADD_TO_BASKET, GET_BASKET_TOTAL, CHANGE_QUANTITY, CREATE_ORDER_RECORD } from '../types';\nimport React, { useReducer } from 'react';\nimport BasketContext from './basketContext';\nimport basketReducer from './basketReducer';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst BasketState = props => {\n  const initialState = {\n    basket: null,\n    sessionId: null,\n    total: 0,\n    error: null\n  };\n  const [state, dispatch] = useReducer(basketReducer, initialState); //Get basket items\n\n  const getBasketItems = async () => {\n    try {\n      const res = await axios.get(`/api/v1/basket/getitems`);\n      dispatch({\n        type: GET_BASKET,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Get basket total\n\n\n  const getBasketTotal = (id, quantity) => {\n    const item = {\n      id,\n      quantity\n    };\n    dispatch({\n      type: GET_BASKET_TOTAL,\n      payload: item\n    });\n  }; //Get basket total\n\n\n  const changeItemQuantity = (id, quantity) => {\n    const item = {\n      id,\n      quantity\n    };\n    dispatch({\n      type: CHANGE_QUANTITY,\n      payload: item\n    });\n  }; //Delete item from basket\n\n\n  const deleteBasketItem = async id => {\n    try {\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\n      dispatch({\n        type: DELETE_BASKET_ITEM,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Create order record after successful transaction\n\n\n  const clearBasketState = () => {\n    dispatch({\n      type: CLEAR_BASKET_STATE\n    });\n  }; //Create stripe checkout session\n\n\n  const createCheckoutSession = async (total, basket) => {\n    const data = {\n      total,\n      basket\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/basket/create-checkout-session', data, config);\n      dispatch({\n        type: CREATE_CHECKOUT_SESSION,\n        payload: res.data.id\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Add item to users' basket\n\n\n  const addToBasket = async (product, quantity) => {\n    let item = {\n      product: product._id,\n      quantity\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await axios.put(`/api/v1/basket/${product._id}/addtobasket`, item, config);\n      dispatch({\n        type: ADD_TO_BASKET,\n        payload: product\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BasketContext.Provider, {\n    value: {\n      basket: state.basket,\n      sessionId: state.sessionId,\n      error: state.error,\n      total: state.total,\n      getBasketItems,\n      deleteBasketItem,\n      getBasketTotal,\n      addToBasket,\n      changeItemQuantity,\n      createCheckoutSession\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BasketState;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/basket/basketState.js"],"names":["GET_BASKET","DELETE_BASKET_ITEM","CREATE_CHECKOUT_SESSION","BASKET_ERROR","ADD_TO_BASKET","GET_BASKET_TOTAL","CHANGE_QUANTITY","CREATE_ORDER_RECORD","React","useReducer","BasketContext","basketReducer","axios","defaults","withCredentials","BasketState","props","initialState","basket","sessionId","total","error","state","dispatch","getBasketItems","res","get","type","payload","data","response","getBasketTotal","id","quantity","item","changeItemQuantity","deleteBasketItem","delete","clearBasketState","CLEAR_BASKET_STATE","createCheckoutSession","config","headers","post","addToBasket","product","_id","put","children"],"mappings":"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","sourcesContent":["import {\r\n  GET_BASKET,\r\n  DELETE_BASKET_ITEM,\r\n  CREATE_CHECKOUT_SESSION,\r\n  BASKET_ERROR,\r\n  ADD_TO_BASKET,\r\n  GET_BASKET_TOTAL,\r\n  CHANGE_QUANTITY,\r\n  CREATE_ORDER_RECORD,\r\n} from '../types';\r\nimport React, { useReducer } from 'react';\r\nimport BasketContext from './basketContext';\r\nimport basketReducer from './basketReducer';\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst BasketState = (props) => {\r\n  const initialState = {\r\n    basket: null,\r\n    sessionId: null,\r\n    total: 0,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(basketReducer, initialState);\r\n\r\n  //Get basket items\r\n  const getBasketItems = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/v1/basket/getitems`);\r\n\r\n      dispatch({ type: GET_BASKET, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Get basket total\r\n  const getBasketTotal = (id, quantity) => {\r\n    const item = {\r\n      id,\r\n      quantity,\r\n    };\r\n    dispatch({ type: GET_BASKET_TOTAL, payload: item });\r\n  };\r\n  //Get basket total\r\n  const changeItemQuantity = (id, quantity) => {\r\n    const item = {\r\n      id,\r\n      quantity,\r\n    };\r\n    dispatch({ type: CHANGE_QUANTITY, payload: item });\r\n  };\r\n\r\n  //Delete item from basket\r\n  const deleteBasketItem = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\r\n      dispatch({ type: DELETE_BASKET_ITEM, payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Create order record after successful transaction\r\n  const clearBasketState = () => {\r\n    dispatch({ type: CLEAR_BASKET_STATE });\r\n  };\r\n  //Create stripe checkout session\r\n  const createCheckoutSession = async (total, basket) => {\r\n    const data = {\r\n      total,\r\n      basket,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        '/api/v1/basket/create-checkout-session',\r\n        data,\r\n        config\r\n      );\r\n      dispatch({ type: CREATE_CHECKOUT_SESSION, payload: res.data.id });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Add item to users' basket\r\n  const addToBasket = async (product, quantity) => {\r\n    let item = {\r\n      product: product._id,\r\n      quantity,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/v1/basket/${product._id}/addtobasket`,\r\n        item,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_TO_BASKET, payload: product });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  return (\r\n    <BasketContext.Provider\r\n      value={{\r\n        basket: state.basket,\r\n        sessionId: state.sessionId,\r\n        error: state.error,\r\n        total: state.total,\r\n        getBasketItems,\r\n        deleteBasketItem,\r\n        getBasketTotal,\r\n        addToBasket,\r\n        changeItemQuantity,\r\n        createCheckoutSession,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </BasketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BasketState;\r\n"]},"metadata":{},"sourceType":"module"}