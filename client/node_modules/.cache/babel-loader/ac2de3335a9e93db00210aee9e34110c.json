{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\components\\\\basket\\\\components\\\\payment\\\\Form.js\";\nimport React from 'react';\nimport { CardElement, useStripe, useElements, CardNumberElement } from '@stripe/react-stripe-js';\n\nfunction Form() {\n  const CARD_OPTIONS = {\n    iconStyle: 'solid',\n    style: {\n      base: {\n        iconColor: '#c4f0ff',\n        color: '#fff',\n        fontWeight: 500,\n        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n        fontSize: '16px',\n        fontSmoothing: 'antialiased',\n        ':-webkit-autofill': {\n          color: '#fce883'\n        },\n        '::placeholder': {\n          color: '#87bbfd'\n        }\n      },\n      invalid: {\n        iconColor: '#ffc7ee',\n        color: '#ffc7ee'\n      }\n    }\n  };\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"FormGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardNumberElement, {\n    options: CARD_OPTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/components/basket/components/payment/Form.js"],"names":["React","CardElement","useStripe","useElements","CardNumberElement","Form","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,iBAJF,QAKO,yBALP;;AAOA,SAASC,IAAT,GAAgB;AACd,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,OADQ;AAEnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,SAAS,EAAE,SADP;AAEJC,QAAAA,KAAK,EAAE,MAFH;AAGJC,QAAAA,UAAU,EAAE,GAHR;AAIJC,QAAAA,UAAU,EAAE,yCAJR;AAKJC,QAAAA,QAAQ,EAAE,MALN;AAMJC,QAAAA,aAAa,EAAE,aANX;AAOJ,6BAAqB;AACnBJ,UAAAA,KAAK,EAAE;AADY,SAPjB;AAUJ,yBAAiB;AACfA,UAAAA,KAAK,EAAE;AADQ;AAVb,OADD;AAeLK,MAAAA,OAAO,EAAE;AACPN,QAAAA,SAAS,EAAE,SADJ;AAEPC,QAAAA,KAAK,EAAE;AAFA;AAfJ;AAFY,GAArB;AAuBA,QAAMM,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KARmC,CAUpC;AACA;AACA;;;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,UAAT,CAAoBtB,WAApB,CAApB,CAboC,CAepC;;AACA,UAAM;AAAEuB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEN;AAF0D,KAA3B,CAAvC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,KAFD,MAEO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAU,IAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEb,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAUD;;AAED,eAAeD,IAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  CardElement,\r\n  useStripe,\r\n  useElements,\r\n  CardNumberElement,\r\n} from '@stripe/react-stripe-js';\r\n\r\nfunction Form() {\r\n  const CARD_OPTIONS = {\r\n    iconStyle: 'solid',\r\n    style: {\r\n      base: {\r\n        iconColor: '#c4f0ff',\r\n        color: '#fff',\r\n        fontWeight: 500,\r\n        fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\r\n        fontSize: '16px',\r\n        fontSmoothing: 'antialiased',\r\n        ':-webkit-autofill': {\r\n          color: '#fce883',\r\n        },\r\n        '::placeholder': {\r\n          color: '#87bbfd',\r\n        },\r\n      },\r\n      invalid: {\r\n        iconColor: '#ffc7ee',\r\n        color: '#ffc7ee',\r\n      },\r\n    },\r\n  };\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Use your card Element with other Stripe.js APIs\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <fieldset className=\"FormGroup\">\r\n        <div className=\"FormRow\">\r\n          <CardNumberElement options={CARD_OPTIONS} />\r\n        </div>\r\n        <div className=\"FormRow\"></div>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}