{"ast":null,"code":"import { CREATE_PRODUCT, GET_PRODUCTS, PRODUCTS_FAIL, GET_PRODUCT, REMOVE_PRODUCT, FILTER_BY_CATEGORY, CLEAR_CURRENT_FILTER, FILTER_BY_RATING, RATE_PRODUCT, SEARCH_PRODUCTS, CLEAR_SEARCH_RESULTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case CREATE_PRODUCT:\n      return { ...state,\n        error: null,\n        product: action.payload\n      };\n\n    case GET_PRODUCTS:\n      return { ...state,\n        loading: false,\n        error: null,\n        products: action.payload\n      };\n\n    case GET_PRODUCT:\n      return { ...state,\n        product: state.products.filter(product => product._id === action.payload)[0]\n      };\n\n    case REMOVE_PRODUCT:\n      return { ...state,\n        product: null,\n        loading: true\n      };\n\n    case PRODUCTS_FAIL:\n      return { ...state,\n        products: [],\n        error: action.payload,\n        loading: false\n      };\n\n    case FILTER_BY_CATEGORY:\n      return { ...state,\n        searchResults: [],\n        ratingFilter: [],\n        categoryFilter: state.products.filter(item => item.category === action.payload)\n      };\n\n    case FILTER_BY_RATING:\n      return { ...state,\n        searchResults: [],\n        categoryFilter: [],\n        ratingFilter: state.products.filter(item => item.averageRating >= action.payload)\n      };\n\n    case SEARCH_PRODUCTS:\n      return { ...state,\n        categoryFilter: [],\n        ratingFilter: [],\n        searchResults: state.products.filter(product => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return product.name.match(regex);\n        })\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return { ...state,\n        searchResults: []\n      };\n\n    case CLEAR_CURRENT_FILTER:\n      return { ...state,\n        categoryFilter: [],\n        ratingFilter: [],\n        searchResults: []\n      };\n\n    case RATE_PRODUCT:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/products/productReducer.js"],"names":["CREATE_PRODUCT","GET_PRODUCTS","PRODUCTS_FAIL","GET_PRODUCT","REMOVE_PRODUCT","FILTER_BY_CATEGORY","CLEAR_CURRENT_FILTER","FILTER_BY_RATING","RATE_PRODUCT","SEARCH_PRODUCTS","CLEAR_SEARCH_RESULTS","state","action","type","error","product","payload","loading","products","filter","_id","searchResults","ratingFilter","categoryFilter","item","category","averageRating","regex","RegExp","name","match"],"mappings":"AAAA,SACEA,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,kBANF,EAOEC,oBAPF,EAQEC,gBARF,EASEC,YATF,EAUEC,eAVF,EAWEC,oBAXF,QAYO,UAZP;AAcA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAHX,OAAP;;AAKF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELM,QAAAA,OAAO,EAAE,KAFJ;AAGLH,QAAAA,KAAK,EAAE,IAHF;AAILI,QAAAA,QAAQ,EAAEN,MAAM,CAACI;AAJZ,OAAP;;AAMF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELI,QAAAA,OAAO,EAAEJ,KAAK,CAACO,QAAN,CAAeC,MAAf,CACNJ,OAAD,IAAaA,OAAO,CAACK,GAAR,KAAgBR,MAAM,CAACI,OAD7B,EAEP,CAFO;AAFJ,OAAP;;AAOF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,OAAO,EAAE,IAFJ;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKf,aAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYO,QAAAA,QAAQ,EAAE,EAAtB;AAA0BJ,QAAAA,KAAK,EAAEF,MAAM,CAACI,OAAxC;AAAiDC,QAAAA,OAAO,EAAE;AAA1D,OAAP;;AACF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELU,QAAAA,aAAa,EAAE,EAFV;AAGLC,QAAAA,YAAY,EAAE,EAHT;AAILC,QAAAA,cAAc,EAAEZ,KAAK,CAACO,QAAN,CAAeC,MAAf,CACbK,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBb,MAAM,CAACI,OADrB;AAJX,OAAP;;AAQF,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELU,QAAAA,aAAa,EAAE,EAFV;AAGLE,QAAAA,cAAc,EAAE,EAHX;AAILD,QAAAA,YAAY,EAAEX,KAAK,CAACO,QAAN,CAAeC,MAAf,CACXK,IAAD,IAAUA,IAAI,CAACE,aAAL,IAAsBd,MAAM,CAACI,OAD3B;AAJT,OAAP;;AAQF,SAAKP,eAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELY,QAAAA,cAAc,EAAE,EAFX;AAGLD,QAAAA,YAAY,EAAE,EAHT;AAILD,QAAAA,aAAa,EAAEV,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAuBJ,OAAD,IAAa;AAChD,gBAAMY,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEhB,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOD,OAAO,CAACc,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,CAAP;AACD,SAHc;AAJV,OAAP;;AASF,SAAKjB,oBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELU,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKf,oBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELY,QAAAA,cAAc,EAAE,EAFX;AAGLD,QAAAA,YAAY,EAAE,EAHT;AAILD,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGG;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA3EJ;AA6ED,CA9ED","sourcesContent":["import {\r\n  CREATE_PRODUCT,\r\n  GET_PRODUCTS,\r\n  PRODUCTS_FAIL,\r\n  GET_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  FILTER_BY_CATEGORY,\r\n  CLEAR_CURRENT_FILTER,\r\n  FILTER_BY_RATING,\r\n  RATE_PRODUCT,\r\n  SEARCH_PRODUCTS,\r\n  CLEAR_SEARCH_RESULTS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case CREATE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        product: action.payload,\r\n      };\r\n    case GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        products: action.payload,\r\n      };\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: state.products.filter(\r\n          (product) => product._id === action.payload\r\n        )[0],\r\n        \r\n      };\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: null,\r\n        loading: true,\r\n      };\r\n    case PRODUCTS_FAIL:\r\n      return { ...state, products: [], error: action.payload, loading: false };\r\n    case FILTER_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n        ratingFilter: [],\r\n        categoryFilter: state.products.filter(\r\n          (item) => item.category === action.payload\r\n        ),\r\n      };\r\n    case FILTER_BY_RATING:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n        categoryFilter: [],\r\n        ratingFilter: state.products.filter(\r\n          (item) => item.averageRating >= action.payload\r\n        ),\r\n      };\r\n    case SEARCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        categoryFilter: [],\r\n        ratingFilter: [],\r\n        searchResults: state.products.filter((product) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return product.name.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n      };\r\n    case CLEAR_CURRENT_FILTER:\r\n      return {\r\n        ...state,\r\n        categoryFilter: [],\r\n        ratingFilter: [],\r\n        searchResults: [],\r\n      };\r\n    case RATE_PRODUCT:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}