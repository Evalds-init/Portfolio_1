{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\context\\\\auth\\\\authState.js\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, UPDATE_DETAILS, UPDATE_DETAILS_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, ADD_TO_BASKET } from '../types';\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst AuthState = props => {\n  const initialState = {\n    isAuthenticated: null,\n    role: null,\n    loading: true,\n    error: null,\n    user: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //Load user\n  //Register user\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/auth/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //Login user\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/auth/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //Persistuser\n\n\n  const persistUser = async () => {\n    try {\n      const res = await axios.get('/api/v1/auth/persistuser');\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //Update user details\n\n\n  const updateDetails = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put('/api/v1/users/updatedetails', formData, config);\n      dispatch({\n        type: UPDATE_DETAILS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: UPDATE_DETAILS_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; //Logout\n  //Clear errors\n  //Add item to basket\n\n\n  const addToBasket = async id => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/users/addtobasket', id, config);\n      dispatch({\n        type: ADD_TO_BASKET,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      login,\n      updateDetails,\n      persistUser,\n      role: state.role\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/auth/authState.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","UPDATE_DETAILS","UPDATE_DETAILS_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","ADD_TO_BASKET","React","useReducer","AuthContext","authReducer","axios","defaults","withCredentials","AuthState","props","initialState","isAuthenticated","role","loading","error","user","state","dispatch","register","formData","config","headers","res","post","type","payload","data","console","log","response","login","persistUser","get","updateDetails","put","addToBasket","id","children"],"mappings":"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","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  UPDATE_DETAILS,\r\n  UPDATE_DETAILS_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  ADD_TO_BASKET,\r\n} from '../types';\r\n\r\nimport React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: null,\r\n    role: null,\r\n    loading: true,\r\n    error: null,\r\n    user: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  //Load user\r\n\r\n  //Register user\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/auth/register', formData, config);\r\n\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data });\r\n    }\r\n  };\r\n  //Login user\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/auth/login', formData, config);\r\n\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data });\r\n    }\r\n  };\r\n  //Persistuser\r\n  const persistUser = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/auth/persistuser');\r\n\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data });\r\n    }\r\n  };\r\n  //Update user details\r\n  const updateDetails = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(\r\n        '/api/v1/users/updatedetails',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_DETAILS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: UPDATE_DETAILS_FAIL, payload: error.response.data });\r\n    }\r\n  };\r\n\r\n  //Logout\r\n\r\n  //Clear errors\r\n  //Add item to basket\r\n  const addToBasket = async (id) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/users/addtobasket', id, config);\r\n\r\n      dispatch({ type: ADD_TO_BASKET, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        login,\r\n        updateDetails,\r\n        persistUser,\r\n        role: state.role,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}