{"ast":null,"code":"import { /// Products\nGET_PRODUCTS, PRODUCTS_ERROR, GET_PRODUCT, REMOVE_PRODUCT /// Filtering\n, FILTER_BY_CATEGORY, CLEAR_FILTERS, FILTER_BY_RATING, RATE_PRODUCT, SEARCH_PRODUCTS, CLEAR_SEARCH_RESULTS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return { ...state,\n        loading: false,\n        products: action.payload\n      };\n\n    case GET_PRODUCT:\n      return { ...state,\n        product: state.products.filter(product => product._id === action.payload)[0],\n        loading: false\n      };\n\n    case REMOVE_PRODUCT:\n      return { ...state,\n        product: []\n      };\n\n    case PRODUCTS_FAIL:\n      return { ...state,\n        products: [],\n        error: action.payload,\n        loading: false\n      };\n\n    case FILTER_BY_CATEGORY:\n      return { ...state,\n        searchResults: [],\n        ratingFilter: [],\n        categoryFilter: state.products.filter(item => item.category === action.payload)\n      };\n\n    case FILTER_BY_RATING:\n      return { ...state,\n        searchResults: [],\n        categoryFilter: [],\n        ratingFilter: state.products.filter(item => item.averageRating >= action.payload)\n      };\n\n    case SEARCH_PRODUCTS:\n      return { ...state,\n        categoryFilter: [],\n        ratingFilter: [],\n        searchResults: state.products.filter(product => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return product.name.match(regex);\n        })\n      };\n\n    case CLEAR_SEARCH_RESULTS:\n      return { ...state,\n        searchResults: []\n      };\n\n    case CLEAR_FILTERS:\n      return { ...state,\n        categoryFilter: [],\n        ratingFilter: [],\n        searchResults: []\n      };\n\n    case RATE_PRODUCT:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/products/productReducer.js"],"names":["GET_PRODUCTS","PRODUCTS_ERROR","GET_PRODUCT","REMOVE_PRODUCT","FILTER_BY_CATEGORY","CLEAR_FILTERS","FILTER_BY_RATING","RATE_PRODUCT","SEARCH_PRODUCTS","CLEAR_SEARCH_RESULTS","state","action","type","loading","products","payload","product","filter","_id","PRODUCTS_FAIL","error","searchResults","ratingFilter","categoryFilter","item","category","averageRating","regex","RegExp","name","match"],"mappings":"AAAA,SACE;AACAA,YAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,cALF,CAME;AANF,EAOEC,kBAPF,EAQEC,aARF,EASEC,gBATF,EAUEC,YAVF,EAWEC,eAXF,EAYEC,oBAZF,QAaO,UAbP;AAeA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,QAAQ,EAAEH,MAAM,CAACI;AAHZ,OAAP;;AAKF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELM,QAAAA,OAAO,EAAEN,KAAK,CAACI,QAAN,CAAeG,MAAf,CACND,OAAD,IAAaA,OAAO,CAACE,GAAR,KAAgBP,MAAM,CAACI,OAD7B,EAEP,CAFO,CAFJ;AAKLF,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELM,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKG,aAAL;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYI,QAAAA,QAAQ,EAAE,EAAtB;AAA0BM,QAAAA,KAAK,EAAET,MAAM,CAACI,OAAxC;AAAiDF,QAAAA,OAAO,EAAE;AAA1D,OAAP;;AACF,SAAKT,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,aAAa,EAAE,EAFV;AAGLC,QAAAA,YAAY,EAAE,EAHT;AAILC,QAAAA,cAAc,EAAEb,KAAK,CAACI,QAAN,CAAeG,MAAf,CACbO,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBd,MAAM,CAACI,OADrB;AAJX,OAAP;;AAQF,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELW,QAAAA,aAAa,EAAE,EAFV;AAGLE,QAAAA,cAAc,EAAE,EAHX;AAILD,QAAAA,YAAY,EAAEZ,KAAK,CAACI,QAAN,CAAeG,MAAf,CACXO,IAAD,IAAUA,IAAI,CAACE,aAAL,IAAsBf,MAAM,CAACI,OAD3B;AAJT,OAAP;;AAQF,SAAKP,eAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELa,QAAAA,cAAc,EAAE,EAFX;AAGLD,QAAAA,YAAY,EAAE,EAHT;AAILD,QAAAA,aAAa,EAAEX,KAAK,CAACI,QAAN,CAAeG,MAAf,CAAuBD,OAAD,IAAa;AAChD,gBAAMW,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEjB,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOC,OAAO,CAACa,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,CAAP;AACD,SAHc;AAJV,OAAP;;AASF,SAAKlB,oBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELW,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELa,QAAAA,cAAc,EAAE,EAFX;AAGLD,QAAAA,YAAY,EAAE,EAHT;AAILD,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKd,YAAL;AACE,aAAO,EACL,GAAGG;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AAnEJ;AAqED,CAtED","sourcesContent":["import {\r\n  /// Products\r\n  GET_PRODUCTS,\r\n  PRODUCTS_ERROR,\r\n  GET_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  /// Filtering\r\n  FILTER_BY_CATEGORY,\r\n  CLEAR_FILTERS,\r\n  FILTER_BY_RATING,\r\n  RATE_PRODUCT,\r\n  SEARCH_PRODUCTS,\r\n  CLEAR_SEARCH_RESULTS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        products: action.payload,\r\n      };\r\n    case GET_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: state.products.filter(\r\n          (product) => product._id === action.payload\r\n        )[0],\r\n        loading: false,\r\n      };\r\n    case REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        product: [],\r\n      };\r\n    case PRODUCTS_FAIL:\r\n      return { ...state, products: [], error: action.payload, loading: false };\r\n    case FILTER_BY_CATEGORY:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n        ratingFilter: [],\r\n        categoryFilter: state.products.filter(\r\n          (item) => item.category === action.payload\r\n        ),\r\n      };\r\n    case FILTER_BY_RATING:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n        categoryFilter: [],\r\n        ratingFilter: state.products.filter(\r\n          (item) => item.averageRating >= action.payload\r\n        ),\r\n      };\r\n    case SEARCH_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        categoryFilter: [],\r\n        ratingFilter: [],\r\n        searchResults: state.products.filter((product) => {\r\n          const regex = new RegExp(`${action.payload}`, 'gi');\r\n          return product.name.match(regex);\r\n        }),\r\n      };\r\n    case CLEAR_SEARCH_RESULTS:\r\n      return {\r\n        ...state,\r\n        searchResults: [],\r\n      };\r\n    case CLEAR_FILTERS:\r\n      return {\r\n        ...state,\r\n        categoryFilter: [],\r\n        ratingFilter: [],\r\n        searchResults: [],\r\n      };\r\n    case RATE_PRODUCT:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}