{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\components\\\\basket\\\\frame\\\\CheckOut.js\";\nimport React, { useEffect } from 'react';\nimport BasketItem from '../item/BasketItem';\nimport Total from './Total';\nimport Checkout from '../payment/Checkout';\n\nconst CheckOut = ({\n  basket,\n  total\n}) => {\n  totalQuantity = () => this.state.basket.reduce((sum, product) => sum + product.quantity, 0);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card inner-checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title center section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Basket Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"), ' ', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, ' ', (basket === null || basket === void 0 ? void 0 : basket[0]) && basket.map((basket, index) => /*#__PURE__*/React.createElement(BasketItem, {\n    basket: basket,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Total, {\n    total: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CheckOut;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/components/basket/frame/CheckOut.js"],"names":["React","useEffect","BasketItem","Total","Checkout","CheckOut","basket","total","totalQuantity","state","reduce","sum","product","quantity","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AACtCC,EAAAA,aAAa,GAAG,MACd,KAAKC,KAAL,CAAWH,MAAX,CAAkBI,MAAlB,CAAyB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACC,QAAzD,EAAmE,CAAnE,CADF;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFF,EAMO,GANP,eAOE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEG,CAAAP,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAG,CAAH,CAAN,KACCA,MAAM,CAACQ,GAAP,CAAW,CAACR,MAAD,EAASS,KAAT,kBACT,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAET,MAApB;AAA4B,IAAA,GAAG,EAAES,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CAPF,CADF,eAgBE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CAxBD;;AA0BA,eAAeF,QAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport BasketItem from '../item/BasketItem';\r\nimport Total from './Total';\r\nimport Checkout from '../payment/Checkout';\r\nconst CheckOut = ({ basket, total }) => {\r\n  totalQuantity = () =>\r\n    this.state.basket.reduce((sum, product) => sum + product.quantity, 0);\r\n\r\n  return (\r\n    <div className=\"card inner-checkout\">\r\n      <div className=\"card-content white-text\">\r\n        <span className=\"card-title center section\">Basket Overview</span>\r\n        <p className=\"center mt-4\">\r\n          I am a very simple card. I am good at containing small bits of\r\n          information. I am convenient because I require little markup to use\r\n          effectively.\r\n        </p>{' '}\r\n        <div className=\"section mt-4\">\r\n          {' '}\r\n          {basket?.[0] &&\r\n            basket.map((basket, index) => (\r\n              <BasketItem basket={basket} key={index} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <Total total={total} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n"]},"metadata":{},"sourceType":"module"}