{"ast":null,"code":"import { DELETE_BASKET_ITEM, GET_BASKET, PROCESS_BASKET_PAYMENT, ADD_TO_BASKET, GET_BASKET_TOTAL, BASKET_PAYMENT_ERROR, CHANGE_QUANTITY, CLEAR_CHECKOUT_ERRORS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_BASKET:\n      return { ...state,\n        basket: action.payload\n      };\n\n    case ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.payload]\n      };\n\n    case DELETE_BASKET_ITEM:\n      return { ...state,\n        basket: state.basket.filter(item => item._id !== action.payload)\n      };\n\n    case PROCESS_BASKET_PAYMENT:\n      return { ...state,\n        loading: false,\n        total: 0,\n        basket: null,\n        orders: action.payload\n      };\n\n    case GET_BASKET_TOTAL:\n      return { ...state,\n        total: state.basket.reduce((acc, value) => acc + value.price * value.purchaseQuantity, 0)\n      };\n\n    case BASKET_PAYMENT_ERROR:\n      return { ...state,\n        loading: true,\n        cardError: action.payload\n      };\n\n    case CLEAR_CHECKOUT_ERRORS:\n      return { ...state,\n        loading: true,\n        cardError: null\n      };\n\n    case CHANGE_QUANTITY:\n      return { ...state,\n        basket: state.basket.map(item => item._id === action.payload.id ? { ...item,\n          purchaseQuantity: action.payload.quantity\n        } : { ...item\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/basket/basketReducer.js"],"names":["DELETE_BASKET_ITEM","GET_BASKET","PROCESS_BASKET_PAYMENT","ADD_TO_BASKET","GET_BASKET_TOTAL","BASKET_PAYMENT_ERROR","CHANGE_QUANTITY","CLEAR_CHECKOUT_ERRORS","state","action","type","basket","payload","filter","item","_id","loading","total","orders","reduce","acc","value","price","purchaseQuantity","cardError","map","id","quantity"],"mappings":"AAAA,SACEA,kBADF,EAEEC,UAFF,EAGEC,sBAHF,EAIEC,aAJF,EAKEC,gBALF,EAMEC,oBANF,EAOEC,eAPF,EAQEC,qBARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,UAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,MAAM,EAAEF,MAAM,CAACG;AAFV,OAAP;;AAIF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAV,EAAkBF,MAAM,CAACG,OAAzB;AAFH,OAAP;;AAIF,SAAKZ,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaE,MAAb,CAAqBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACG,OAAlD;AAFH,OAAP;;AAIF,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELQ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,CAHF;AAILN,QAAAA,MAAM,EAAE,IAJH;AAKLO,QAAAA,MAAM,EAAET,MAAM,CAACG;AALV,OAAP;;AAOF,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELS,QAAAA,KAAK,EAAET,KAAK,CAACG,MAAN,CAAaQ,MAAb,CACL,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACE,gBADrC,EAEL,CAFK;AAFF,OAAP;;AAOF,SAAKlB,oBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELQ,QAAAA,OAAO,EAAE,IAFJ;AAGLQ,QAAAA,SAAS,EAAEf,MAAM,CAACG;AAHb,OAAP;;AAKF,SAAKL,qBAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYQ,QAAAA,OAAO,EAAE,IAArB;AAA2BQ,QAAAA,SAAS,EAAE;AAAtC,OAAP;;AACF,SAAKlB,eAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAac,GAAb,CAAkBX,IAAD,IACvBA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACG,OAAP,CAAec,EAA5B,GACI,EAAE,GAAGZ,IAAL;AAAWS,UAAAA,gBAAgB,EAAEd,MAAM,CAACG,OAAP,CAAee;AAA5C,SADJ,GAEI,EAAE,GAAGb;AAAL,SAHE;AAFH,OAAP;;AASF;AACE,aAAON,KAAP;AAnDJ;AAqDD,CAtDD","sourcesContent":["import {\r\n  DELETE_BASKET_ITEM,\r\n  GET_BASKET,\r\n  PROCESS_BASKET_PAYMENT,\r\n  ADD_TO_BASKET,\r\n  GET_BASKET_TOTAL,\r\n  BASKET_PAYMENT_ERROR,\r\n  CHANGE_QUANTITY,\r\n  CLEAR_CHECKOUT_ERRORS,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_BASKET:\r\n      return {\r\n        ...state,\r\n        basket: action.payload,\r\n      };\r\n    case ADD_TO_BASKET:\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.payload],\r\n      };\r\n    case DELETE_BASKET_ITEM:\r\n      return {\r\n        ...state,\r\n        basket: state.basket.filter((item) => item._id !== action.payload),\r\n      };\r\n    case PROCESS_BASKET_PAYMENT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        total: 0,\r\n        basket: null,\r\n        orders: action.payload,\r\n      };\r\n    case GET_BASKET_TOTAL:\r\n      return {\r\n        ...state,\r\n        total: state.basket.reduce(\r\n          (acc, value) => acc + value.price * value.purchaseQuantity,\r\n          0\r\n        ),\r\n      };\r\n    case BASKET_PAYMENT_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        cardError: action.payload,\r\n      };\r\n    case CLEAR_CHECKOUT_ERRORS:\r\n      return { ...state, loading: true, cardError: null };\r\n    case CHANGE_QUANTITY:\r\n      return {\r\n        ...state,\r\n        basket: state.basket.map((item) =>\r\n          item._id === action.payload.id\r\n            ? { ...item, purchaseQuantity: action.payload.quantity }\r\n            : { ...item }\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}