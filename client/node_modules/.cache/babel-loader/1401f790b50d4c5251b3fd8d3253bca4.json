{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\components\\\\basket\\\\payment\\\\Form.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport BasketContext from '../../../context/basket/basketContext';\nimport AlertContext from '../../../context/alert/alertContext';\n\nfunction Form({\n  toBasket = f => f\n}) {\n  const basketContext = useContext(BasketContext);\n  const {\n    acceptPayment,\n    total,\n    basket,\n    cardError,\n    loading\n  } = basketContext;\n  const alertContext = useContext(AlertContext);\n  const {\n    setAlert\n  } = alertContext;\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      acceptPayment(id, total, basket);\n    }\n  };\n\n  useEffect(() => {\n    if (cardError) {\n      setAlert(`${cardError}`, 'red', 'col s8 offset-s2 m8 offset-m2 l8 offset-l2');\n    }\n  }, [cardError]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, !loading && !cardError));\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/components/basket/payment/Form.js"],"names":["React","useContext","useEffect","CardElement","useStripe","useElements","BasketContext","AlertContext","Form","toBasket","f","basketContext","acceptPayment","total","basket","cardError","loading","alertContext","setAlert","stripe","elements","onSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,yBAApD;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAQ,GAAIC,CAAD,IAAOA;AAApB,CAAd,EAAuC;AACrC,QAAMC,aAAa,GAAGV,UAAU,CAACK,aAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA,aAAF;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA;AAA3C,MAAuDL,aAA7D;AACA,QAAMM,YAAY,GAAGhB,UAAU,CAACM,YAAD,CAA/B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeD,YAArB;AACA,QAAME,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB1B,WAApB;AAF0D,KAA3B,CAAvC;;AAIA,QAAI,CAACqB,KAAL,EAAY;AACV,YAAM;AAAEM,QAAAA;AAAF,UAASL,aAAf;AACAb,MAAAA,aAAa,CAACkB,EAAD,EAAKjB,KAAL,EAAYC,MAAZ,CAAb;AACD;AACF,GAVD;;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAJ,EAAe;AACbG,MAAAA,QAAQ,CACL,GAAEH,SAAU,EADP,EAEN,KAFM,EAGN,4CAHM,CAAR;AAKD;AACF,GARQ,EAQN,CAACA,SAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACC,OAAD,IAAY,CAACD,SADf,CADF,CADF;AAOD;;AAED,eAAeP,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport BasketContext from '../../../context/basket/basketContext';\r\nimport AlertContext from '../../../context/alert/alertContext';\r\nfunction Form({ toBasket = (f) => f }) {\r\n  const basketContext = useContext(BasketContext);\r\n  const { acceptPayment, total, basket, cardError, loading } = basketContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const { setAlert } = alertContext;\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    if (!error) {\r\n      const { id } = paymentMethod;\r\n      acceptPayment(id, total, basket);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (cardError) {\r\n      setAlert(\r\n        `${cardError}`,\r\n        'red',\r\n        'col s8 offset-s2 m8 offset-m2 l8 offset-l2'\r\n      );\r\n    }\r\n  }, [cardError]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n       {!loading && !cardError}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}