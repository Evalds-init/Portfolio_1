{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\context\\\\basket\\\\basketState.js\";\nimport { GET_BASKET, DELETE_BASKET_ITEM, PROCESS_BASKET_PAYMENT, BASKET_ERROR, ADD_TO_BASKET, GET_BASKET_TOTAL, CHANGE_QUANTITY, CLEAR_BASKET_STATE, BASKET_PAYMENT_ERROR, CLEAR_CHECKOUT_ERRORS } from '../types';\nimport React, { useReducer } from 'react';\nimport BasketContext from './basketContext';\nimport basketReducer from './basketReducer';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst BasketState = props => {\n  const initialState = {\n    basket: null,\n    orders: [],\n    total: 0,\n    error: null,\n    cardError: null,\n    loading: true\n  };\n  const [state, dispatch] = useReducer(basketReducer, initialState); //Get basket items\n\n  const getBasketItems = async () => {\n    try {\n      const res = await axios.get(`/api/v1/basket/getitems`);\n      dispatch({\n        type: GET_BASKET,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Get basket total\n\n\n  const getBasketTotal = (id, quantity) => {\n    const item = {\n      id,\n      quantity\n    };\n    dispatch({\n      type: GET_BASKET_TOTAL,\n      payload: item\n    });\n  }; //Get basket total\n\n\n  const changeItemQuantity = (id, quantity) => {\n    const item = {\n      id,\n      quantity\n    };\n    dispatch({\n      type: CHANGE_QUANTITY,\n      payload: item\n    });\n  }; //Delete item from basket\n\n\n  const deleteBasketItem = async id => {\n    try {\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\n      dispatch({\n        type: DELETE_BASKET_ITEM,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Create order record after successful transaction\n\n\n  const clearBasketState = () => {\n    dispatch({\n      type: CLEAR_BASKET_STATE\n    });\n  }; //Create stripe checkout session\n\n\n  const acceptPayment = async (id, total, basket) => {\n    const data = {\n      total,\n      basket,\n      id\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/basket/checkout', data, config);\n      dispatch({\n        type: PROCESS_BASKET_PAYMENT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_PAYMENT_ERROR,\n        payload: error.response.data.error\n      });\n      setTimeout(() => dispatch({\n        type: CLEAR_CHECKOUT_ERRORS\n      }), 6000);\n    }\n  }; //Add item to users' basket\n\n\n  const addToBasket = async (product, quantity) => {\n    let item = {\n      product: product._id,\n      quantity\n    };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await axios.put(`/api/v1/basket/${product._id}/addtobasket`, item, config);\n      dispatch({\n        type: ADD_TO_BASKET,\n        payload: product\n      });\n    } catch (error) {\n      dispatch({\n        type: BASKET_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(BasketContext.Provider, {\n    value: {\n      basket: state.basket,\n      orders: state.orders,\n      error: state.error,\n      loading: state.loading,\n      total: state.total,\n      cardError: state.cardError,\n      getBasketItems,\n      clearBasketState,\n      deleteBasketItem,\n      getBasketTotal,\n      addToBasket,\n      changeItemQuantity,\n      acceptPayment\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default BasketState;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/basket/basketState.js"],"names":["GET_BASKET","DELETE_BASKET_ITEM","PROCESS_BASKET_PAYMENT","BASKET_ERROR","ADD_TO_BASKET","GET_BASKET_TOTAL","CHANGE_QUANTITY","CLEAR_BASKET_STATE","BASKET_PAYMENT_ERROR","CLEAR_CHECKOUT_ERRORS","React","useReducer","BasketContext","basketReducer","axios","defaults","withCredentials","BasketState","props","initialState","basket","orders","total","error","cardError","loading","state","dispatch","getBasketItems","res","get","type","payload","data","response","getBasketTotal","id","quantity","item","changeItemQuantity","deleteBasketItem","delete","clearBasketState","acceptPayment","config","headers","post","setTimeout","addToBasket","product","_id","put","children"],"mappings":";AAAA,SACEA,UADF,EAEEC,kBAFF,EAGEC,sBAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,gBANF,EAOEC,eAPF,EAQEC,kBARF,EASEC,oBATF,EAUEC,qBAVF,QAYO,UAZP;AAaA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,IADW;AAEnBC,IAAAA,MAAM,EAAE,EAFW;AAGnBC,IAAAA,KAAK,EAAE,CAHY;AAInBC,IAAAA,KAAK,EAAE,IAJY;AAKnBC,IAAAA,SAAS,EAAE,IALQ;AAMnBC,IAAAA,OAAO,EAAE;AANU,GAArB;AASA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,aAAD,EAAgBM,YAAhB,CAApC,CAV6B,CAY7B;;AACA,QAAMS,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,yBAAX,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE/B,UAAR;AAAoBgC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAAtC,OAAD,CAAR;AACD,KAJD,CAIE,OAAOV,KAAP,EAAc;AACdI,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE5B,YAAR;AAAsB6B,QAAAA,OAAO,EAAET,KAAK,CAACW,QAAN,CAAeD;AAA9C,OAAD,CAAR;AACD;AACF,GARD,CAb6B,CAsB7B;;;AACA,QAAME,cAAc,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AACvC,UAAMC,IAAI,GAAG;AACXF,MAAAA,EADW;AAEXC,MAAAA;AAFW,KAAb;AAIAV,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE1B,gBAAR;AAA0B2B,MAAAA,OAAO,EAAEM;AAAnC,KAAD,CAAR;AACD,GAND,CAvB6B,CA8B7B;;;AACA,QAAMC,kBAAkB,GAAG,CAACH,EAAD,EAAKC,QAAL,KAAkB;AAC3C,UAAMC,IAAI,GAAG;AACXF,MAAAA,EADW;AAEXC,MAAAA;AAFW,KAAb;AAIAV,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEzB,eAAR;AAAyB0B,MAAAA,OAAO,EAAEM;AAAlC,KAAD,CAAR;AACD,GAND,CA/B6B,CAuC7B;;;AACA,QAAME,gBAAgB,GAAG,MAAOJ,EAAP,IAAc;AACrC,QAAI;AACF,YAAMtB,KAAK,CAAC2B,MAAN,CAAc,6BAA4BL,EAAG,EAA7C,CAAN;AACAT,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE9B,kBAAR;AAA4B+B,QAAAA,OAAO,EAAEI;AAArC,OAAD,CAAR;AACD,KAHD,CAGE,OAAOb,KAAP,EAAc;AACdI,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE5B,YAAR;AAAsB6B,QAAAA,OAAO,EAAET,KAAK,CAACW,QAAN,CAAeD;AAA9C,OAAD,CAAR;AACD;AACF,GAPD,CAxC6B,CAgD7B;;;AACA,QAAMS,gBAAgB,GAAG,MAAM;AAC7Bf,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAExB;AAAR,KAAD,CAAR;AACD,GAFD,CAjD6B,CAoD7B;;;AACA,QAAMoC,aAAa,GAAG,OAAOP,EAAP,EAAWd,KAAX,EAAkBF,MAAlB,KAA6B;AACjD,UAAMa,IAAI,GAAG;AACXX,MAAAA,KADW;AAEXF,MAAAA,MAFW;AAGXgB,MAAAA;AAHW,KAAb;AAKA,UAAMQ,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACF,YAAMhB,GAAG,GAAG,MAAMf,KAAK,CAACgC,IAAN,CAAW,yBAAX,EAAsCb,IAAtC,EAA4CW,MAA5C,CAAlB;AACAjB,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE7B,sBAAR;AAAgC8B,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAAlD,OAAD,CAAR;AACD,KAHD,CAGE,OAAOV,KAAP,EAAc;AACdI,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEvB,oBADC;AAEPwB,QAAAA,OAAO,EAAET,KAAK,CAACW,QAAN,CAAeD,IAAf,CAAoBV;AAFtB,OAAD,CAAR;AAIAwB,MAAAA,UAAU,CAAC,MAAMpB,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEtB;AAAR,OAAD,CAAf,EAAkD,IAAlD,CAAV;AACD;AACF,GArBD,CArD6B,CA2E7B;;;AACA,QAAMuC,WAAW,GAAG,OAAOC,OAAP,EAAgBZ,QAAhB,KAA6B;AAC/C,QAAIC,IAAI,GAAG;AACTW,MAAAA,OAAO,EAAEA,OAAO,CAACC,GADR;AAETb,MAAAA;AAFS,KAAX;AAIA,UAAMO,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAM/B,KAAK,CAACqC,GAAN,CACH,kBAAiBF,OAAO,CAACC,GAAI,cAD1B,EAEJZ,IAFI,EAGJM,MAHI,CAAN;AAMAjB,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE3B,aAAR;AAAuB4B,QAAAA,OAAO,EAAEiB;AAAhC,OAAD,CAAR;AACD,KARD,CAQE,OAAO1B,KAAP,EAAc;AACdI,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE5B,YAAR;AAAsB6B,QAAAA,OAAO,EAAET,KAAK,CAACW,QAAN,CAAeD;AAA9C,OAAD,CAAR;AACD;AACF,GAtBD;;AAyBA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLb,MAAAA,MAAM,EAAEM,KAAK,CAACN,MADT;AAELC,MAAAA,MAAM,EAAEK,KAAK,CAACL,MAFT;AAGLE,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;AAILE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLH,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KALR;AAMLE,MAAAA,SAAS,EAAEE,KAAK,CAACF,SANZ;AAOLI,MAAAA,cAPK;AAQLc,MAAAA,gBARK;AASLF,MAAAA,gBATK;AAULL,MAAAA,cAVK;AAWLa,MAAAA,WAXK;AAYLT,MAAAA,kBAZK;AAaLI,MAAAA;AAbK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBGzB,KAAK,CAACkC,QAlBT,CADF;AAsBD,CA3HD;;AA6HA,eAAenC,WAAf","sourcesContent":["import {\r\n  GET_BASKET,\r\n  DELETE_BASKET_ITEM,\r\n  PROCESS_BASKET_PAYMENT,\r\n  BASKET_ERROR,\r\n  ADD_TO_BASKET,\r\n  GET_BASKET_TOTAL,\r\n  CHANGE_QUANTITY,\r\n  CLEAR_BASKET_STATE,\r\n  BASKET_PAYMENT_ERROR,\r\n  CLEAR_CHECKOUT_ERRORS,\r\n\r\n} from '../types';\r\nimport React, { useReducer } from 'react';\r\nimport BasketContext from './basketContext';\r\nimport basketReducer from './basketReducer';\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst BasketState = (props) => {\r\n  const initialState = {\r\n    basket: null,\r\n    orders: [],\r\n    total: 0,\r\n    error: null,\r\n    cardError: null,\r\n    loading: true,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(basketReducer, initialState);\r\n\r\n  //Get basket items\r\n  const getBasketItems = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/v1/basket/getitems`);\r\n\r\n      dispatch({ type: GET_BASKET, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Get basket total\r\n  const getBasketTotal = (id, quantity) => {\r\n    const item = {\r\n      id,\r\n      quantity,\r\n    };\r\n    dispatch({ type: GET_BASKET_TOTAL, payload: item });\r\n  };\r\n  //Get basket total\r\n  const changeItemQuantity = (id, quantity) => {\r\n    const item = {\r\n      id,\r\n      quantity,\r\n    };\r\n    dispatch({ type: CHANGE_QUANTITY, payload: item });\r\n  };\r\n\r\n  //Delete item from basket\r\n  const deleteBasketItem = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/basket/deleteitem/${id}`);\r\n      dispatch({ type: DELETE_BASKET_ITEM, payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Create order record after successful transaction\r\n  const clearBasketState = () => {\r\n    dispatch({ type: CLEAR_BASKET_STATE });\r\n  };\r\n  //Create stripe checkout session\r\n  const acceptPayment = async (id, total, basket) => {\r\n    const data = {\r\n      total,\r\n      basket,\r\n      id,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/basket/checkout', data, config);\r\n      dispatch({ type: PROCESS_BASKET_PAYMENT, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BASKET_PAYMENT_ERROR,\r\n        payload: error.response.data.error,\r\n      });\r\n      setTimeout(() => dispatch({ type: CLEAR_CHECKOUT_ERRORS }), 6000);\r\n    }\r\n  };\r\n  //Add item to users' basket\r\n  const addToBasket = async (product, quantity) => {\r\n    let item = {\r\n      product: product._id,\r\n      quantity,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      await axios.put(\r\n        `/api/v1/basket/${product._id}/addtobasket`,\r\n        item,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_TO_BASKET, payload: product });\r\n    } catch (error) {\r\n      dispatch({ type: BASKET_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <BasketContext.Provider\r\n      value={{\r\n        basket: state.basket,\r\n        orders: state.orders,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        total: state.total,\r\n        cardError: state.cardError,\r\n        getBasketItems,\r\n        clearBasketState,\r\n        deleteBasketItem,\r\n        getBasketTotal,\r\n        addToBasket,\r\n        changeItemQuantity,\r\n        acceptPayment,\r\n \r\n      }}\r\n    >\r\n      {props.children}\r\n    </BasketContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BasketState;\r\n"]},"metadata":{},"sourceType":"module"}