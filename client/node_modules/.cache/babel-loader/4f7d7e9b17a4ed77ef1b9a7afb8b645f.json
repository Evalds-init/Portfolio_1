{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, UPDATE_DETAILS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, USER_ERROR, UPDATE_ADDRESS, ADD_ADDRESS, DELETE_ADDRESS } from '../types';\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst AuthState = props => {\n  const initialState = {\n    isAuthenticated: null,\n    loading: true,\n    authError: null,\n    userError: null,\n    user: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //Load user\n  //Register user\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/auth/register', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error\n      });\n      clearErrors();\n    }\n  }; //Login user\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/auth/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      });\n      clearErrors();\n    }\n  }; //Persist user\n\n\n  const persistUser = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/auth/persistuser', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.error\n      });\n      clearErrors();\n    }\n  }; //Logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //Clear errors\n\n\n  const clearErrors = () => {\n    setTimeout(() => dispatch({\n      type: CLEAR_ERRORS\n    }), 5000);\n  }; ///////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////// User detail update\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////\n  //Update user details\n\n\n  const updateDetails = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put('/api/v1/users/updatedetails', formData, config);\n      dispatch({\n        type: UPDATE_DETAILS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Update user details\n\n\n  const updateUserAddress = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put('/api/v1/users/updateaddress', formData, config);\n      dispatch({\n        type: UPDATE_ADDRESS,\n        payload: formData\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //Update user details\n\n\n  const addUserAddress = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v1/users/addaddress', formData, config);\n      dispatch({\n        type: ADD_ADDRESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data\n      });\n    }\n  }; //delete address\n\n\n  const deleteAddress = async id => {\n    try {\n      await axios.delete(`/api/v1/users/${id}/deleteaddress`);\n      dispatch({\n        type: DELETE_ADDRESS,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      authError: state.authError,\n      register,\n      login,\n      persistUser,\n      logout,\n      //////////////////////////////////////////////\n      ///// User Details\n      /////////////////////////////////////////////\n      updateDetails,\n      updateUserAddress,\n      addUserAddress,\n      deleteAddress\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/auth/AuthState.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","UPDATE_DETAILS","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","USER_ERROR","UPDATE_ADDRESS","ADD_ADDRESS","DELETE_ADDRESS","React","useReducer","AuthContext","authReducer","axios","defaults","withCredentials","AuthState","props","initialState","isAuthenticated","loading","authError","userError","user","state","dispatch","register","formData","config","headers","res","post","type","payload","data","error","console","log","response","clearErrors","login","persistUser","logout","setTimeout","updateDetails","put","updateUserAddress","addUserAddress","deleteAddress","id","delete","children"],"mappings":"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","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  UPDATE_DETAILS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  USER_ERROR,\r\n  UPDATE_ADDRESS,\r\n  ADD_ADDRESS,\r\n  DELETE_ADDRESS,\r\n} from '../types';\r\n\r\nimport React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport axios from 'axios';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    authError: null,\r\n    userError: null,\r\n    user: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  //Load user\r\n\r\n  //Register user\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/auth/register', formData, config);\r\n\r\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.error });\r\n      clearErrors();\r\n    }\r\n  };\r\n  //Login user\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/v1/auth/login', formData, config);\r\n\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data });\r\n      clearErrors();\r\n    }\r\n  };\r\n  //Persist user\r\n  const persistUser = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        '/api/v1/auth/persistuser',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.error });\r\n      clearErrors();\r\n    }\r\n  };\r\n\r\n  //Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  //Clear errors\r\n  const clearErrors = () => {\r\n    setTimeout(() => dispatch({ type: CLEAR_ERRORS }), 5000);\r\n  };\r\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //////////// User detail update\r\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //Update user details\r\n  const updateDetails = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(\r\n        '/api/v1/users/updatedetails',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_DETAILS, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: USER_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Update user details\r\n  const updateUserAddress = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(\r\n        '/api/v1/users/updateaddress',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: UPDATE_ADDRESS, payload: formData });\r\n    } catch (error) {\r\n      dispatch({ type: USER_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //Update user details\r\n  const addUserAddress = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        '/api/v1/users/addaddress',\r\n        formData,\r\n        config\r\n      );\r\n\r\n      dispatch({ type: ADD_ADDRESS, payload: res.data.data });\r\n    } catch (error) {\r\n      dispatch({ type: USER_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  //delete address\r\n  const deleteAddress = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/users/${id}/deleteaddress`);\r\n\r\n      dispatch({ type: DELETE_ADDRESS, payload: id });\r\n    } catch (error) {\r\n      dispatch({ type: USER_ERROR, payload: error.response.data });\r\n    }\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        authError: state.authError,\r\n        register,\r\n        login,\r\n        persistUser,\r\n        logout,\r\n        //////////////////////////////////////////////\r\n        ///// User Details\r\n        /////////////////////////////////////////////\r\n        updateDetails,\r\n        updateUserAddress,\r\n        addUserAddress,\r\n        deleteAddress,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}