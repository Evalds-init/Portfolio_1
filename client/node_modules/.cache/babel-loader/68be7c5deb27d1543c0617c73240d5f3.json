{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evalds\\\\Documents\\\\Portfolio_1\\\\client\\\\src\\\\components\\\\basket\\\\frame\\\\CheckOut.js\";\nimport React, { useEffect, use } from 'react';\nimport BasketItem from '../item/BasketItem';\nimport Total from './Total';\n\nconst CheckOut = ({\n  basket\n}) => {\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    if (quantity === 0) {\n      setQuantity(1);\n      setAlert('Quantity can not be set to 0', 'blue darken-2', 'col s10 offset-s1 m10 offset-m1 l10 offset-l1');\n    }\n  }, [quantity]);\n\n  const decreaseQuantity = () => {\n    setQuantity(quantity - 1);\n  };\n\n  const increaseQuantity = () => {\n    setQuantity(quantity + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card inner-checkout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content white-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"card-title center section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Basket Overview\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"), ' ', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, ' ', (basket === null || basket === void 0 ? void 0 : basket[0]) && basket.map((basket, index) => /*#__PURE__*/React.createElement(BasketItem, {\n    basket: basket,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Total, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CheckOut;","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/components/basket/frame/CheckOut.js"],"names":["React","useEffect","use","BasketItem","Total","CheckOut","basket","quantity","setQuantity","useState","setAlert","decreaseQuantity","increaseQuantity","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,GAA3B,QAAsC,OAAtC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAD,CAAxC;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,KAAK,CAAjB,EAAoB;AAClBC,MAAAA,WAAW,CAAC,CAAD,CAAX;AACAE,MAAAA,QAAQ,CACN,8BADM,EAEN,eAFM,EAGN,+CAHM,CAAR;AAKD;AACF,GATQ,EASN,CAACH,QAAD,CATM,CAAT;;AAUA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,GAFD;;AAGA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAFF,EAMO,GANP,eAOE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEG,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAG,CAAH,CAAN,KACCA,MAAM,CAACO,GAAP,CAAW,CAACP,MAAD,EAASQ,KAAT,kBACT,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAER,MAApB;AAA4B,IAAA,GAAG,EAAEQ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHJ,CAPF,CADF,eAgBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CAtCD;;AAwCA,eAAeT,QAAf","sourcesContent":["import React, { useEffect, use } from 'react';\r\nimport BasketItem from '../item/BasketItem';\r\nimport Total from './Total';\r\nconst CheckOut = ({ basket }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  useEffect(() => {\r\n    if (quantity === 0) {\r\n      setQuantity(1);\r\n      setAlert(\r\n        'Quantity can not be set to 0',\r\n        'blue darken-2',\r\n        'col s10 offset-s1 m10 offset-m1 l10 offset-l1'\r\n      );\r\n    }\r\n  }, [quantity]);\r\n  const decreaseQuantity = () => {\r\n    setQuantity(quantity - 1);\r\n  };\r\n  const increaseQuantity = () => {\r\n    setQuantity(quantity + 1);\r\n  };\r\n  return (\r\n    <div className=\"card inner-checkout\">\r\n      <div className=\"card-content white-text\">\r\n        <span className=\"card-title center section\">Basket Overview</span>\r\n        <p className=\"center mt-4\">\r\n          I am a very simple card. I am good at containing small bits of\r\n          information. I am convenient because I require little markup to use\r\n          effectively.\r\n        </p>{' '}\r\n        <div className=\"section mt-4\">\r\n          {' '}\r\n          {basket?.[0] &&\r\n            basket.map((basket, index) => (\r\n              <BasketItem basket={basket} key={index} />\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <Total />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOut;\r\n"]},"metadata":{},"sourceType":"module"}