{"ast":null,"code":"import { REGISTER_SUCCESS, UPDATE_DETAILS, LOGIN_SUCCESS, LOGOUT, CLEAR_ERRORS, USER_ERROR, ADD_ADDRESS, UPDATE_ADDRESS, DELETE_ADDRESS, AUTH_FAIL } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////// User actions\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    case UPDATE_DETAILS:\n      return { ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        userError: null\n      };\n\n    case UPDATE_ADDRESS:\n      return { ...state,\n        user: { ...state.user,\n          address: state.user.address.map(address => address._id === action.payload._id ? action.payload : address)\n        }\n      };\n\n    case ADD_ADDRESS:\n      return { ...state,\n        user: { ...state.user,\n          address: action.payload\n        }\n      };\n\n    case DELETE_ADDRESS:\n      return { ...state,\n        user: { ...state.user,\n          address: state.user.address.filter(item => item._id !== action.payload)\n        }\n      };\n\n    case USER_ERROR:\n      return { ...state,\n        isAuthenticated: true,\n        userError: action.payload\n      };\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //////////// Authorization\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    case REGISTER_SUCCESS:\n      return { ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null\n      };\n\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        authError: null\n      };\n\n    case AUTH_FAIL:\n      return { ...state,\n        isAuthenticated: false,\n        user: null,\n        authError: action.payload\n      };\n\n    case LOGOUT:\n      return { ...state,\n        isAuthenticated: false,\n        user: null\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        authError: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Evalds/Documents/Portfolio_1/client/src/context/auth/authReducer.js"],"names":["REGISTER_SUCCESS","UPDATE_DETAILS","LOGIN_SUCCESS","LOGOUT","CLEAR_ERRORS","USER_ERROR","ADD_ADDRESS","UPDATE_ADDRESS","DELETE_ADDRESS","AUTH_FAIL","state","action","type","isAuthenticated","user","payload","userError","address","map","_id","filter","item","error","authError"],"mappings":"AAAA,SACEA,gBADF,EAEEC,cAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,YALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,cARF,EASEC,cATF,EAUEC,SAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE;AACA;AACA;AACA,SAAKX,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAHR;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELI,QAAAA,IAAI,EAAE,EACJ,GAAGJ,KAAK,CAACI,IADL;AAEJG,UAAAA,OAAO,EAAEP,KAAK,CAACI,IAAN,CAAWG,OAAX,CAAmBC,GAAnB,CAAwBD,OAAD,IAC9BA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACI,OAAP,CAAeI,GAA/B,GAAqCR,MAAM,CAACI,OAA5C,GAAsDE,OAD/C;AAFL;AAFD,OAAP;;AASF,SAAKX,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELI,QAAAA,IAAI,EAAE,EAAE,GAAGJ,KAAK,CAACI,IAAX;AAAiBG,UAAAA,OAAO,EAAEN,MAAM,CAACI;AAAjC;AAFD,OAAP;;AAIF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELI,QAAAA,IAAI,EAAE,EACJ,GAAGJ,KAAK,CAACI,IADL;AAEJG,UAAAA,OAAO,EAAEP,KAAK,CAACI,IAAN,CAAWG,OAAX,CAAmBG,MAAnB,CACNC,IAAD,IAAUA,IAAI,CAACF,GAAL,KAAaR,MAAM,CAACI,OADvB;AAFL;AAFD,OAAP;;AAUF,SAAKV,UAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLG,QAAAA,SAAS,EAAEL,MAAM,CAACI;AAHb,OAAP;AAKF;AACA;AACA;;AACA,SAAKf,gBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAHR;AAILO,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKpB,aAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAHR;AAILQ,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKd,SAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,IAAI,EAAE,IAHD;AAILS,QAAAA,SAAS,EAAEZ,MAAM,CAACI;AAJb,OAAP;;AAOF,SAAKZ,MAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,eAAe,EAAE,KAFZ;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKV,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYa,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AAEF;AACE,aAAOb,KAAP;AA9EJ;AAgFD,CAjFD","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  UPDATE_DETAILS,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  USER_ERROR,\r\n  ADD_ADDRESS,\r\n  UPDATE_ADDRESS,\r\n  DELETE_ADDRESS,\r\n  AUTH_FAIL,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    //////////// User actions\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    case UPDATE_DETAILS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        userError: null,\r\n      };\r\n    case UPDATE_ADDRESS:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          address: state.user.address.map((address) =>\r\n            address._id === action.payload._id ? action.payload : address\r\n          ),\r\n        },\r\n      };\r\n    case ADD_ADDRESS:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, address: action.payload },\r\n      };\r\n    case DELETE_ADDRESS:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          address: state.user.address.filter(\r\n            (item) => item._id !== action.payload\r\n          ),\r\n        },\r\n      };\r\n\r\n    case USER_ERROR:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        userError: action.payload,\r\n      };\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    //////////// Authorization\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        error: null,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        authError: null,\r\n      };\r\n    case AUTH_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        authError: action.payload,\r\n      };\r\n\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return { ...state, authError: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}